# Configuration file

##########################################################################################################
# clientonly
#--------------------------------------------------------------------------------------------------------#
# Эти настройки влияют только на клиент, который использует модификации.
##########################################################################################################

clientonly {
    # Показывать информацию о оболочках в интерфейсе?
    # 0 = Нет
    # 1 = Показывать только названия
    # 2 = Да, полностью!
    I:showAllShellInfoInGui=1
}


##########################################################################################################
# gameplay
#--------------------------------------------------------------------------------------------------------#
# Эти настройки влияют на игровой процесс, при использовании модификаций.
##########################################################################################################

gameplay {
    # Добавлено по запросу, модификация поддерживает оболочки загруженными. Не протестировано, не поддерживается разработчиком.
    # Может навсегда уничтожить Ваш мир.
    # Отключайте на свой страх и риск.
    I:allowChunkLoading=1

    # Разрешить синхронизацию оболочек через измерения?
    # ВНИМАНИЕ: Существуют проблемы при входе и выходе из Края, где Вам требуется перезайти в игру ПОСЛЕ синхронизации, потому что чанки могут не загрузиться.
    # Включайте путешествие в Край на свой страх и риск.
    # 0 = Нет
    # 1 = Да, но не в Край
    # 2 = Да, и даже в Край
    I:allowCrossDimensional=1

    # Разрешить синхронизацию через измерения, когда игрок умирает и заново синхронизируется?
    I:crossDimensionalSyncingOnDeath=1

    # Количество получаемого урона (в половинках сердец) игроком, когда новая оболочка создана.
    I:damageGivenOnShellConstruction=2

    # Включить рецепты хардкорного режима?
    # 0 = Нет
    # 1 = Да
    # 2 = Да, но только, если режим игры - хардкор.
    I:hardcoreMode=0

    # Разрешить отмену смерти игрока, если у игрока есть другие оболочки?
    # Игрок снова синхронизируется к ближайшей оболочке.
    # 0 = Нет
    # 1 = Да, но только к хранилищам
    # 2 = Да, к хранилищам и конструкторам
    I:overrideDeathIfThereAreAvailableShells=0

    # Выбирать "домашние" оболочки, когда игрок умирает и заново синхронизируется?
    I:prioritizeHomeShellOnDeath=1

    # Соотношение Redstone Flux : Piggawatt.
    # 1RF = <можно настроить>PG
    # По умолчанию 1 RF создаёт 2 PG
    I:ratioRF=2

    # Reduce Health On Death Sync (Additive)?
    # (2 = 1 heart)
    I:reduceHealthOnDeathSync=0

    # Требуемая энергия для конструктора оболочек
    I:shellConstructionPowerRequirement=500000

    # Требуемая энергия за тик в piggawatts, чтобы хранилище оболочек оставалось активным.
    # 0 = Не требуется
    I:shellStoragePowerRequirement=0

    # Transfereres all items that should be persistent (such as soulbound from Tinker's Construct).
    # May cause issues with mods that copy the enitre inventory on player clone event
    I:transferPersistentItems=1
}


